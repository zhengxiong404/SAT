bool CnfParser::SAT()
{
	while (type)
	{
		bool huishu = true; //回溯标记
		int id = 0; //选取的变元编号
        while (单子句队列不为空 && huishu)
        { //对文件原有的单子句处理,不需要回溯(不入栈)
            获取队首变元，并出队;
            if (变元没有处理过)
            {
                huishu = 分析判断（id）;
            }
        }
		if (huishu)
		{
			id = 0;
			遍历map，找到未被访问的变元，且出现次数最多的变元赋值给变量id;
			if (id == 0)
			{ //处理完,结束处理
				return 有解;
			}
			huishu = 分析判断（id）;
		}
		else
		{
			while (!huishu)//回溯
			{ 
				清空单子句队列;
				if (栈为空)
					return 无解;
                获取栈顶元素赋值给 backid;
				while (backid为单子句)
				{ 
                    还原状态，出栈，获取栈顶元素赋值给 backid;
				}
				if (backid为一次赋值)
				{
                    还原状态，出栈，对backid二次赋值;
					huishu = 分析判断（backid）;
				}
				else
				{
                    还原状态，出栈;
				}
			}
		}
	}
	return true;
}